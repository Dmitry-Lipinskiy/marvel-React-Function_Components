{"version":3,"file":"static/js/667.86da9556.chunk.js","mappings":"+OASaA,EAAa,WAExB,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA4BL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA4CT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GACxCG,GAAsCb,EAAAA,EAAAA,WAAS,GAAMc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAYJ,EAAZI,cAExBC,EAAAA,EAAAA,YAAU,WACRC,EAAUhB,EAEZ,GAAG,IAEH,IAAMgB,EAAY,SAAChB,GACjBK,GAAkB,GAClBS,EAAad,GAAQiB,KAAKC,EAC5B,EAEMA,EAAqB,SAACC,GAC1B,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACzBD,GAAQ,GAEVvB,GAAc,SAACD,GAAU,SAAA0B,QAAAC,EAAAA,EAAAA,GAAS3B,IAAU2B,EAAAA,EAAAA,GAAKJ,GAAa,IAC9Dd,GAAkB,GAClBJ,GAAU,SAACD,GAAM,OAAKA,EAAS,CAAC,IAChCS,EAAeW,EACjB,EA2BMI,EAzBkB,SAAC5B,GAAU,OACjC6B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,eAAcC,SACzB/B,EAAWgC,KAAI,SAACC,EAAMC,GAAC,OACtBL,EAAAA,EAAAA,KAAA,MACEC,UAAU,eAAcC,UAGxBI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAX,OAAaO,EAAKK,IAAKP,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OACEU,IAAKN,EAAKO,UACVC,IAAKR,EAAKS,MACVZ,UAAU,sBAEZD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,SAC/BE,EAAKS,SAERb,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,SAChCE,EAAKU,YAZLT,EAeF,KAEJ,CAGoBU,CAAgB5C,GACrC6C,EAAe5B,GAAQY,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,IAAM,KAC1CC,EAAU/B,IAAYR,GAAiBqB,EAAAA,EAAAA,KAACmB,EAAAA,EAAO,IAAM,KAE3D,OACEb,EAAAA,EAAAA,MAAA,OAAKL,UAAU,eAAcC,SAAA,CAC1Bc,EACAE,EACAnB,GACDC,EAAAA,EAAAA,KAAA,UAAQC,UAAU,mCAChBmB,SAAUzC,EACV0C,MAAO,CAACC,QAASvC,EAAc,OAAS,SACxCwC,QAAS,kBAAMhC,EAAUhB,EAAO,EAAC2B,UAEjCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOC,SAAC,kBAI/B,ECxEA,EAPmB,WAAH,OACdI,EAAAA,EAAAA,MAAAkB,EAAAA,SAAA,CAAAtB,SAAA,EACEF,EAAAA,EAAAA,KAACyB,EAAAA,EAAS,KACVzB,EAAAA,EAAAA,KAAClC,EAAU,MACV,C","sources":["components/comicsList/ComicsList.js","components/pages/comicsPage/ComicsPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useMarvelService } from '../../services/marvelService/MarvelService';\nimport { ErrorMessage } from '../errorMessage/ErrorMessage';\nimport { Spinner } from '../spinner/Spinner';\n\nimport './comicsList.scss';\n\nexport const ComicsList = () => {\n\n  const [comicsList, setComicsList] = useState([]);\n  const [offset, setOffset] = useState(0);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onRequest = (offset) => {\n    setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset((offset) => offset + 8);\n    setComicsEnded(ended);\n  };\n\n  const comicsListItems = (comicsList) => (\n    <ul className='comics__grid'>\n      {comicsList.map((item, i) => (\n        <li \n          className='comics__item'\n          key={i}\n        >\n          <Link to={`/comics/${item.id}`}>\n            <img \n              src={item.thumbnail} \n              alt={item.title} \n              className='comics__item-img' \n            />\n            <div className='comics__item-name'>\n              {item.title}\n            </div>\n            <div className='comics__item-price'>\n              {item.price}\n            </div>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n\n  const newComicsListItems = comicsListItems(comicsList);\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n  return (\n    <div className='comics__list'>\n      {errorMessage}\n      {spinner}\n      {newComicsListItems}\n      <button className='button button__main button__long'\n        disabled={newItemLoading}\n        style={{display: comicsEnded ? 'none' : 'block'}}\n        onClick={() => onRequest(offset)}\n      >\n        <div className='inner'>load more</div>\n      </button>\n    </div>\n  );\n};\n\n","import { AppBanner } from \"../../appBanner\";\r\nimport { ComicsList } from \"../../comicsList\";\r\n\r\nconst ComicsPage = () => (\r\n  <>\r\n    <AppBanner />\r\n    <ComicsList />\r\n  </>\r\n);\r\n\r\nexport default ComicsPage;\r\n\r\n"],"names":["ComicsList","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","offset","setOffset","_useState5","_useState6","newItemLoading","setNewItemLoading","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","loading","error","getAllComics","useEffect","onRequest","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","newComicsListItems","_jsx","className","children","map","item","i","_jsxs","Link","to","id","src","thumbnail","alt","title","price","comicsListItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","display","onClick","_Fragment","AppBanner"],"sourceRoot":""}