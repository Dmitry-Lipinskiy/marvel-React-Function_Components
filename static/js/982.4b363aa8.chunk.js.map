{"version":3,"file":"static/js/982.4b363aa8.chunk.js","mappings":"yMAwCA,UA/BwB,WAEtB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEtBI,GAAiDC,EAAAA,EAAAA,KAAzCC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAAOC,EAAQJ,EAARI,SAAUC,EAAUL,EAAVK,YAElCC,EAAAA,EAAAA,YAAU,WACRC,GAEF,GAAG,CAACf,IAEJ,IAAMe,EAAc,WAClBF,IACAD,EAASZ,GAASgB,KAAKC,EACzB,EAEMA,EAAgB,SAACX,GACrBC,EAASD,EACX,EAEMY,EAAYR,GAAWC,IAAUL,EAAkC,MAAzBa,EAAAA,EAAAA,KAACC,EAAI,CAACd,MAAOA,IAE7D,OACEe,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACGC,EAAAA,EAAAA,GAAiBd,EAASC,GAC1BO,IAGP,EAIA,IAAME,EAAO,SAAHK,GAAmB,IAAbnB,EAAKmB,EAALnB,MAENoB,EAA8DpB,EAA9DoB,MAAOC,EAAuDrB,EAAvDqB,YAAaC,EAA0CtB,EAA1CsB,UAAWC,EAA+BvB,EAA/BuB,UAAWC,EAAoBxB,EAApBwB,SAAUC,EAAUzB,EAAVyB,MAE5D,OACEV,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEJ,EAAAA,EAAAA,KAACa,EAAAA,EAAS,KACVX,EAAAA,EAAAA,MAAA,OAAKY,UAAU,eAAcV,SAAA,EAC3BJ,EAAAA,EAAAA,KAAA,OAAKe,IAAKL,EAAWM,IAAKT,EAAOO,UAAU,uBAC3CZ,EAAAA,EAAAA,MAAA,OAAKY,UAAU,qBAAoBV,SAAA,EACjCJ,EAAAA,EAAAA,KAAA,MAAIc,UAAU,qBAAoBV,SAAEG,KACpCP,EAAAA,EAAAA,KAAA,KAAGc,UAAU,sBAAqBV,SAAEI,KACpCR,EAAAA,EAAAA,KAAA,KAAGc,UAAU,sBAAqBV,SAAEK,KACpCP,EAAAA,EAAAA,MAAA,KAAGY,UAAU,sBAAqBV,SAAA,CAAC,aAAWO,MAC9CX,EAAAA,EAAAA,KAAA,OAAKc,UAAU,sBAAqBV,SAAEQ,QAExCZ,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,UAAUJ,UAAU,qBAAoBV,SAAC,qBAM1D,C,wFC7DaC,EAAmB,SAACd,EAASC,GACxC,OAAID,GACKS,EAAAA,EAAAA,KAACmB,EAAAA,EAAO,IAEb3B,GACKQ,EAAAA,EAAAA,KAACoB,EAAAA,EAAY,SADtB,CAGF,C","sources":["components/pages/singlePage/SingleComicPage.js","resources/data/is-error-or-spinner.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\n\nimport { useMarvelService } from '../../../services/marvelService/MarvelService';\nimport { isErrorOrSpinner } from '../../../resources/data/is-error-or-spinner';\nimport { AppBanner } from '../../appBanner';\n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n\n  const { comicId } = useParams();\n  const [comic, setComic] = useState(null);\n\n  const { loading, error, getComic, clearError } = useMarvelService();\n\n  useEffect(() => {\n    updateComic();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [comicId]);\n\n  const updateComic = () => {\n    clearError();\n    getComic(comicId).then(onComicLoaded);\n  };\n\n  const onComicLoaded = (comic) => {\n    setComic(comic);\n  };\n\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\n\n  return (\n    <>\n      {isErrorOrSpinner(loading, error)}\n      {content}\n    </>\n  );\n};\n\nexport default SingleComicPage;\n\nconst View = ({ comic }) => {\n\n  const { title, description, pageCount, thumbnail, language, price } = comic;\n\n  return (\n    <>\n      <AppBanner />\n      <div className='single-comic'>\n        <img src={thumbnail} alt={title} className='single-comic__img' />\n        <div className='single-comic__info'>\n          <h2 className='single-comic__name'>{title}</h2>\n          <p className='single-comic__descr'>{description}</p>\n          <p className='single-comic__descr'>{pageCount}</p>\n          <p className='single-comic__descr'>Language: {language}</p>\n          <div className='single-comic__price'>{price}</div>\n        </div>\n        <Link to='/comics' className='single-comic__back'>\n          Back to all\n        </Link>\n      </div>\n    </>\n  );\n};\n\n","import { ErrorMessage } from \"../../components/errorMessage/ErrorMessage\"\r\nimport { Spinner } from \"../../components/spinner/Spinner\"\r\n\r\nexport const isErrorOrSpinner = (loading, error) => {\r\n  if (loading) {\r\n    return <Spinner />\r\n  }\r\n  if (error) {\r\n    return <ErrorMessage />\r\n  }\r\n}"],"names":["comicId","useParams","_useState","useState","_useState2","_slicedToArray","comic","setComic","_useMarvelService","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","content","_jsx","View","_jsxs","_Fragment","children","isErrorOrSpinner","_ref","title","description","pageCount","thumbnail","language","price","AppBanner","className","src","alt","Link","to","Spinner","ErrorMessage"],"sourceRoot":""}